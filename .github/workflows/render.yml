name: Deploy to Render

on: workflow_dispatch
#on:
#  push:
#    branches:
#      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install --file ${{ github.workspace }}/orderservice/pom.xml
    
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/orderservice/
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rest-api:latest

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/orderservice/
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rest-api:latest

      - name: Deploy to Render with Docker Hub image
        if: github.ref == 'refs/heads/main'
        env:
          base_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          docker_user: ${{ secrets.DOCKERHUB_USERNAME }}
          commit_sha: ${{ github.sha }}
        run: |
          # Construimos el imgURL codificado
          image="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/rest-api:${commit_sha}"
          encoded_image=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$image'''))")

          full_url="${base_url}&imgURL=${encoded_image}"

          echo "Deploying to Render using image: $image"
          curl "$full_url"
