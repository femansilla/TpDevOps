name: build-test-deploy spring-api

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    name: build-test-deploy spring-api
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file  ${{ github.workspace }}/orderservice/pom.xml

#      - name: Unit Tests
#        uses: bcgov/action-test-and-analyse-java@main
#        with:
#          commands: |
#            ./mvnw test
#          dir: ${{ github.workspace }}/orderservice/
#          java-cache: maven
#          java-distribution: temurin
#          java-version: "17"

      - name: build the docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/orderservice/
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rest-api:${{ github.sha }}

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push the docker image to docker hub
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/orderservice/
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rest-api:${{ github.sha }}

      - name: Deploy to Render with Docker Hub image
        if: github.ref == 'refs/heads/main'
        env:
          base_url: ${{ secrets.RENDER_DOCKER_IMAGE_DEPLOY_HOOK_URL }}
          docker_user: ${{ secrets.DOCKERHUB_USERNAME }}
          commit_sha: ${{ github.sha }}
        run: |
          # Construimos el imgURL codificado
          image="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/rest-api:${commit_sha}"
          encoded_image=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$image'''))")

          full_url="${base_url}&imgURL=${encoded_image}"

          echo "Deploying to Render using image: $image"
          curl "$full_url"
