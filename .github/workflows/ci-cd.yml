name: build spring-api

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    name: build-test-deploy spring-api
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file  ${{ github.workspace }}/orderservice/pom.xml

      - name: Unit Tests
      - uses: bcgov/action-test-and-analyse-java@main
        with:
          commands: |
            mvnw test
          dir: ${{ github.workspace }}/orderservice/
          java-cache: maven
          java-distribution: temurin
          java-version: "17"

      - name: build the docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/orderservice/
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rest-api:latest

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push the docker image to docker hub
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/orderservice/
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rest-api:latest

      - name: Log in to Render
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": "clear"}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploy

      - name: Deploy to Render
        run: echo "Deployment triggered"
